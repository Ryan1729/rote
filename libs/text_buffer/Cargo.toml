[package]
name = "text_buffer"
version = "0.1.0"
authors = ["Ryan1729 <Ryan1729@gmail.com>"]
edition = "2021"

[lib]
path = "./src/text_buffer.rs"

[dependencies.cursors]
path = "../cursors"

[dependencies.edit]
path = "../edit"

[dependencies.editor_types]
path = "../editor_types"

[dependencies.if_changed]
path = "../if_changed"

[dependencies.macros]
path = "../macros"

[dependencies.move_cursor]
path = "../move_cursor"

[dependencies.panic_safe_rope]
path = "../panic_safe_rope"

[dependencies.parsers]
path = "../parsers"

[dependencies.perf_viz]
path = "../perf_viz"

[dependencies.platform_types]
path = "../platform_types"

[dependencies.rope_pos]
path = "../rope_pos"

[dependencies.search]
path = "../search"

[dependencies]
proptest = { package = "proptest_wrapper", path = "../proptest_wrapper", optional = true }
pretty_assertions = { version = "0.6.1", optional = true }
text_buffer_testing = { path = "../text_buffer_testing", optional = true }
pub_arb_cursors = { path = "../pub_arb/cursors", optional = true }
pub_arb_edit = { path = "../pub_arb/edit", optional = true }
pub_arb_std = { path = "../pub_arb/std", optional = true }
pub_arb_text_pos = { path = "../pub_arb/text_pos", optional = true }
pub_arb_vec1 = { path = "../pub_arb/vec1", optional = true }
regex = { version = "1", optional = true }

[dev-dependencies]
proptest = { package = "proptest_wrapper", path = "../proptest_wrapper" }
pretty_assertions = "0.6.1"
regex = "1"
text_buffer_testing = { path = "../text_buffer_testing" }
pub_arb_cursors = { path = "../pub_arb/cursors" }
pub_arb_edit = { path = "../pub_arb/edit" }
pub_arb_std = { path = "../pub_arb/std" }
pub_arb_text_pos = { path = "../pub_arb/text_pos" }
pub_arb_vec1 = { path = "../pub_arb/vec1" }

[features]
default = ["uncategorized_tests", "cursor_manipulation", "edit_tests", "strip_trailing_whitespace_does_not_increase_the_amount_of_characters", "does_not_lose_characters", "included_files", "undo_redo_general", "undo_redo_works", "undo_redo_does_not_allow_applying_stale_redos", "inserting_then_deleting", "do_proptests"]
extra-prints = ["edit/extra-prints"]
pub_arb = ["regex", "text_buffer_testing", "proptest", "pretty_assertions", "pub_arb_cursors", "pub_arb_edit", "pub_arb_std", "pub_arb_text_pos", "pub_arb_vec1"]
# enables tests becasue some take a long time to compile {
uncategorized_tests = []
cursor_manipulation = []
edit_tests = []
strip_trailing_whitespace_does_not_increase_the_amount_of_characters = []
does_not_lose_characters = []
included_files = []
undo_redo_general = []
undo_redo_works = []
undo_redo_does_not_allow_applying_stale_redos = []
inserting_then_deleting = []
# }
# So, to compile and run only certain tests you can run the following in the same
# folder as this file:
# $ cargo t -r --no-default-features --features="desired features here"
do_proptests = []