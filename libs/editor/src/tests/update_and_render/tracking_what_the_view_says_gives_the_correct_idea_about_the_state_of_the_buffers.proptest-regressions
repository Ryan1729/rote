# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 2a0c8361bae1f82c7e3f60209e48e35a2f1b8aac561a331a22ee3a29e9a1c7d0 # shrinks to inputs = [AddOrSelectBuffer(Scratch(1), "¡")]
cc 2b190071504bb80d0c13b9326f3af1fff83a30df8d36d6b104840d20559735b1 # shrinks to input1 = AddOrSelectBuffer(Scratch(1), "A"), state = State { current: 0, invalidation: RemovedAt(0) }
cc f56651d11bdbc7a7bac74bf3e2a55c21e8c233b02447d98f4849ad447631b85a # shrinks to inputs = [AddOrSelectBuffer(Path(".fakefile"), "A")]
cc 40adb575aa104a76cc79db769dcc1467cd4970cd8e89258c12d8debe9c475f23 # shrinks to inputs = [NewScratchBuffer(Some("\u{e000}")), Undo]
cc 0556bf4df34b55277de7cc208e1ff74dcec52aa24cea9515f9a3d3d409a2b8da # shrinks to inputs = [NewScratchBuffer(Some("¡")), Paste(Some("¡"))]
cc 4a7c49b6c70aee3ee2e8ec5f13e86ec556ad81b2d908d23010c9708d60e7cb43 # shrinks to inputs = [NewScratchBuffer(Some("a"))]
cc 637854448abda4cf167f8a50bacf7a56ffa02fed4306daa2a85d5ea700746569 # shrinks to input1 = NewScratchBuffer(Some("A")), index_state = State { current: 0, invalidation: RemovedAt(0) }
cc ed66c434271e3353ccb12fd7024b957e10617c58ba0c9ad2b0e4c126073732bd # shrinks to state = State { buffers: EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, last_non_rope_hash: 441525992139778067, .. d!: () }, parsers: Initialized(InitializedParsers { parser_map: "TODO parser_map: Debug", rust_basic_query: Query { ptr: 0x7f99a80033d0, capture_names: ["comment", "string"], text_predicates: [[], [], [], []], property_settings: [[], [], [], []], property_predicates: [[], [], [], []], general_predicates: [[], [], [], []] }, rust_lang: Language(0x56275939d3c0) }), view: View { buffers: SelectableVec1 { elements: Vec1([BufferView { name_string: "*scratch 0*", data: BufferViewData { cursors: [CursorView { position: pos!{l 0 o 0}, state: _ }], spans: Spans { spans: [SpanView { one_past_end: ByteIndex(0), kind: SpanKind(0) }] }, .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, menu: None, status_line: StatusLineView { chars: "1/1 N(txt)  ? t(0, 0) s(0, 0) c 0:0 (0, 0) (N|0)," }, current_buffer_kind: Text, edited_transitions: EditedTransitions([]), stats: ViewStats { latest_render_duration: 0ns } }, .. d!: () }, inputs = [NewScratchBuffer(Some(" "))]
cc c1e1cdfcbc3be6abd5bbcc3677826a588682d2433aa801d730204c1ecfd13e5e # shrinks to state = State { buffers: EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, last_non_rope_hash: 441525992139778067, .. d!: () }, parsers: Initialized(InitializedParsers { parser_map: "TODO parser_map: Debug", rust_basic_query: Query { ptr: 0x7f99b41de950, capture_names: ["comment", "string"], text_predicates: [[], [], [], []], property_settings: [[], [], [], []], property_predicates: [[], [], [], []], general_predicates: [[], [], [], []] }, rust_lang: Language(0x56275939d3c0) }), view: View { buffers: SelectableVec1 { elements: Vec1([BufferView { name_string: "*scratch 0*", data: BufferViewData { cursors: [CursorView { position: pos!{l 0 o 0}, state: _ }], spans: Spans { spans: [SpanView { one_past_end: ByteIndex(0), kind: SpanKind(0) }] }, .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, menu: None, status_line: StatusLineView { chars: "1/1 N(txt)  ? t(0, 0) s(0, 0) c 0:0 (0, 0) (N|0)," }, current_buffer_kind: Text, edited_transitions: EditedTransitions([]), stats: ViewStats { latest_render_duration: 0ns } }, .. d!: () }, inputs = [NewScratchBuffer(Some("¡"))]
cc 0ee4ea8206d1086cb9957210944436cde7b53c9ae7c49b48c1c47ff046d965a8 # shrinks to buffers = EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, .. d!: () }, inputs = [NewScratchBuffer(Some("¡"))]
cc 187b9fc306ec69d253bb4e66b4fb4de7ea8a7efe643c1d0934ed5fd5fc0bd530 # shrinks to input1 = ShowError("test ShowError"), index_state = State { current: 0, invalidation: RemovedAt(0) }
cc c465fed181a7580e6f8dd8a5994e9e7b9f1d58b2b3ec89d55519e18bc60274bd # shrinks to inputs = [ShowError("test ShowError")]
cc 68e619f0f1190ac7b11ec8433b4a0f1cfd0e262e68877d2d97bbc64f668f8549 # shrinks to inputs = [Paste(Some("¡")), TabOut]
