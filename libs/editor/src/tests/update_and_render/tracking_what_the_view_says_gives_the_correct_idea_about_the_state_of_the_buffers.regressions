# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 42cbf0da1f4413f3440c965af67c558a2d75671fc07836a2a7dac5dae8665208 # shrinks to buffers = EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, .. d!: () }, inputs = [AddOrSelectBuffer(Scratch(1), "0")]
cc 8fdc3ee8518ada1d5f3cbc1b2ddd54ac93f87e84d3c5fd9061739e41f95094f8 # shrinks to buffers = EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { name: Path(".fakefile"), .. d!: () }, EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, .. d!: () }, inputs = [AddOrSelectBuffer(Scratch(1), "¬°")]
cc 19616fa1e7b5b1bc577e9da8a64a54ab5d22768a1fe6a73036a48809bccc22f8 # shrinks to buffers = EditorBuffers { buffers: SelectableVec1 { elements: Vec1([EditorBuffer { name: Path(".fakefile"), search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }, EditorBuffer { search_results: SearchResults { ranges: [(pos!{l 0 o 0}, pos!{l 0 o 0})], .. d!: () }, .. d!: () }]), index_state: State { current: 0, invalidation: RemovedAt(0) }, current_index: Index { generation: 0, index: 0 } }, last_non_rope_hash: 224377, last_full_hash: Some(8535864942000704273) }, inputs = [AddOrSelectBuffer(Path("h\u{ea6c5}Z\\&\u{202e}»∫=R\u{202e}\u{2}.fakefile"), "\u{feff}-\t\u{feff}\u{5}\u{202e}\u{4}:%v\u{feff}t\u{c02f0}P8\u{8b}\u{19f8a}3-?YnÔøΩ\u{94bfa}"), SavedAs(Index { generation: 4027249338, index: 14 }, "d.fakefile"), SavedAs(Index { generation: 400831013, index: 12 }, "\u{1b}\u{0}6\u{ca5bb}\u{feff}\u{9a006}\u{0}\u{1b}\u{70fe0}PM\u{1b}¬¶=\r\u{d1936}\u{feff}©êûo3:=\'%ÔøΩ9\u{1b}\u{1}9</{.fakefile"), SavedAs(Index { generation: 1767253856, index: 9 }, "CDN&=g\u{e066}\t\u{b}\u{ebd5c}a\u{76444}<$ÔøΩ\u{2feb}—®√ô.fakefile"), Redo, SavedAs(Index { generation: 66502023, index: 6 }, "\u{8}`\u{b}:.\tO\u{8}»∫»∫\u{e951e}\u{6e4cb}<n?\u{2}\u{35ee1}.fakefile"), SavedAs(Index { generation: 463593361, index: 1 }, ".\u{99cd1}\u{bbfcc}\u{aca19}\u{3610f}\u{b}\t,»∫\u{10b800}\u{0}\u{75c77}»∫.fakefile"), SavedAs(Index { generation: 2051203320, index: 9 }, "\u{7269b}\u{feff}J(\u{202e}$Hu<\u{8c087}\u{1b}»∫\u{feff}),[O\u{7}\u{8b536}\u{f857f}={$\u{202e}\u{48642}<»∫.fakefile"), SavedAs(Index { generation: 3787398201, index: 7 }, "]\r:\u{9833a}¬•—®\u{5e1fb}\"]\u{bc081}\'%√∫%\u{1b}`\u{bc130}\u{3137e}»∫I\u{41148}k¬•Z\u{11892}.fakefile"), SavedAs(Index { generation: 557925371, index: 10 }, "`\u{7ec38}==¬§{\u{1b}<\u{5a136}\\\u{1}\u{2}:ÔøΩ\u{667a8}t/g\u{7f}¬•x\u{efd33}\'\u{f8a31}\u{cb3cd}\r\\.fakefile"), SavedAs(Index { generation: 2102457722, index: 16 }, "h√è\u{31513}\'\u{1b}\u{5d9c4}k%»∫\u{feff}&\u{1b}&\t\u{f44be}`»∫\u{0}®≥èd\u{ae3bd}yüï¥r\u{32fd7}.fakefile"), SavedAs(Index { generation: 854054386, index: 14 }, "\u{0}\u{0}e\u{6}\u{e896}\u{f6f29}\u{10d2c9}.$o$üï¥\u{7f}.fakefile"), SavedAs(Index { generation: 2461629787, index: 2 }, "\u{2}.fakefile")]
